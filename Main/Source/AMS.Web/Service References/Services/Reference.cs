//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMS.Web.Services {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.AMSLeadImportSoap")]
    public interface AMSLeadImportSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMoveStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateMoveStatus(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMoveStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateMoveStatusAsync(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchIDFromZip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetBranchIDFromZip(string OriginZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchIDFromZip", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetBranchIDFromZipAsync(string OriginZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAggregatorQualifiedLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAggregatorQualifiedLeads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAggregatorQualifiedLeads", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAggregatorQualifiedLeadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGraebelQualifiedLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetGraebelQualifiedLeads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGraebelQualifiedLeads", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetGraebelQualifiedLeadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAPILeadImportInfoBySource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAPILeadImportInfoBySource(string APIClientSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAPILeadImportInfoBySource", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAPILeadImportInfoBySourceAsync(string APIClientSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadSitecore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadSitecore(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadSitecore", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadSitecoreAsync(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead03", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead03(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead03", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead03Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead01", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead01(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead01", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead01Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AMSLeadImportSoapChannel : AMS.Web.Services.AMSLeadImportSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AMSLeadImportSoapClient : System.ServiceModel.ClientBase<AMS.Web.Services.AMSLeadImportSoap>, AMS.Web.Services.AMSLeadImportSoap {
        
        public AMSLeadImportSoapClient() {
        }
        
        public AMSLeadImportSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AMSLeadImportSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AMSLeadImportSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AMSLeadImportSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateMoveStatus(string CustomerID) {
            base.Channel.UpdateMoveStatus(CustomerID);
        }
        
        public System.Threading.Tasks.Task UpdateMoveStatusAsync(string CustomerID) {
            return base.Channel.UpdateMoveStatusAsync(CustomerID);
        }
        
        public int GetBranchIDFromZip(string OriginZip) {
            return base.Channel.GetBranchIDFromZip(OriginZip);
        }
        
        public System.Threading.Tasks.Task<int> GetBranchIDFromZipAsync(string OriginZip) {
            return base.Channel.GetBranchIDFromZipAsync(OriginZip);
        }
        
        public System.Data.DataTable GetAggregatorQualifiedLeads() {
            return base.Channel.GetAggregatorQualifiedLeads();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAggregatorQualifiedLeadsAsync() {
            return base.Channel.GetAggregatorQualifiedLeadsAsync();
        }
        
        public System.Data.DataTable GetGraebelQualifiedLeads() {
            return base.Channel.GetGraebelQualifiedLeads();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetGraebelQualifiedLeadsAsync() {
            return base.Channel.GetGraebelQualifiedLeadsAsync();
        }
        
        public System.Data.DataTable GetAPILeadImportInfoBySource(string APIClientSource) {
            return base.Channel.GetAPILeadImportInfoBySource(APIClientSource);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAPILeadImportInfoBySourceAsync(string APIClientSource) {
            return base.Channel.GetAPILeadImportInfoBySourceAsync(APIClientSource);
        }
        
        public string ImportLeadSitecore(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText) {
            return base.Channel.ImportLeadSitecore(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, MoveType, APIReferenceID, DestinationZip, CanWeText);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadSitecoreAsync(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText) {
            return base.Channel.ImportLeadSitecoreAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, MoveType, APIReferenceID, DestinationZip, CanWeText);
        }
        
        public string ImportLead03(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress) {
            return base.Channel.ImportLead03(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, ClientIPAddress);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead03Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress) {
            return base.Channel.ImportLead03Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, ClientIPAddress);
        }
        
        public string ImportLead01(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText) {
            return base.Channel.ImportLead01(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead01Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText) {
            return base.Channel.ImportLead01Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText);
        }
    }
}
