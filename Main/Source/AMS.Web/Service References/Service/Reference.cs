//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMS.Web.Service {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.AMSLeadImportSoap")]
    public interface AMSLeadImportSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCommonClasses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMS.Web.Service.CommonClasses GetCommonClasses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCommonClasses", ReplyAction="*")]
        System.Threading.Tasks.Task<AMS.Web.Service.CommonClasses> GetCommonClassesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchIDFromZip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetBranchIDFromZip(string OriginZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchIDFromZip", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetBranchIDFromZipAsync(string OriginZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerCoupon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateCustomerCoupon(string CustomerID, int CouponID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerCoupon", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateCustomerCouponAsync(string CustomerID, int CouponID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAggregatorQualifiedLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAggregatorQualifiedLeads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAggregatorQualifiedLeads", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAggregatorQualifiedLeadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGraebelQualifiedLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetGraebelQualifiedLeads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGraebelQualifiedLeads", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetGraebelQualifiedLeadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAPILeadImportInfoBySource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAPILeadImportInfoBySource(string APIClientSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAPILeadImportInfoBySource", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAPILeadImportInfoBySourceAsync(string APIClientSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadSitecore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadSitecore(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadSitecore", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadSitecoreAsync(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertCustomerIPAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void InsertCustomerIPAddress(string CustomerID, string IPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertCustomerIPAddress", ReplyAction="*")]
        System.Threading.Tasks.Task InsertCustomerIPAddressAsync(string CustomerID, string IPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead03", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead03(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead03", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead03Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead01", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead01(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string Comments, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead01", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead01Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string Comments, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadKenshoo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadKenshoo(
                    string KPID, 
                    bool CreateLead, 
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    string MoveType, 
                    string GCLID, 
                    string MSCLICKID, 
                    int CouponID, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadKenshoo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadKenshooAsync(
                    string KPID, 
                    bool CreateLead, 
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    string MoveType, 
                    string GCLID, 
                    string MSCLICKID, 
                    int CouponID, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead05", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead05(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead05", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead05Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead05GCLID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead05GCLID(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, string GCLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead05GCLID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead05GCLIDAsync(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, string GCLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadMovingful", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadMovingful(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string Referral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadMovingful", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadMovingfulAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string Referral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMP02", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadPMP02(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure, bool IsAutodialer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMP02", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadPMP02Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure, bool IsAutodialer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMP02GCLID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadPMP02GCLID(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string GCLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMP02GCLID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadPMP02GCLIDAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string GCLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMPCoupon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadPMPCoupon(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMPCoupon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadPMPCouponAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMPCouponGCLID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadPMPCouponGCLID(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID, 
                    string GCLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMPCouponGCLID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadPMPCouponGCLIDAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID, 
                    string GCLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMP01", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadPMP01(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPMP01", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadPMP01Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPorch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadPorch(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginAddress, string OriginCity, string OriginZip, string DestinationAddress, string DestinationCity, string DestinationZip, string Src, string HomeBuyerOrRenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadPorch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadPorchAsync(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginAddress, string OriginCity, string OriginZip, string DestinationAddress, string DestinationCity, string DestinationZip, string Src, string HomeBuyerOrRenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadUnbounce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadUnbounce(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadUnbounce", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadUnbounceAsync(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadUnbounceWithDest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLeadUnbounceWithDest(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLeadUnbounceWithDest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLeadUnbounceWithDestAsync(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead06", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportLead06(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress, string MoveType, string PromoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportLead06", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportLead06Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress, string MoveType, string PromoCode);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CommonClasses : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AMSLeadImportSoapChannel : AMS.Web.Service.AMSLeadImportSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AMSLeadImportSoapClient : System.ServiceModel.ClientBase<AMS.Web.Service.AMSLeadImportSoap>, AMS.Web.Service.AMSLeadImportSoap {
        
        public AMSLeadImportSoapClient() {
        }
        
        public AMSLeadImportSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AMSLeadImportSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AMSLeadImportSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AMSLeadImportSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMS.Web.Service.CommonClasses GetCommonClasses() {
            return base.Channel.GetCommonClasses();
        }
        
        public System.Threading.Tasks.Task<AMS.Web.Service.CommonClasses> GetCommonClassesAsync() {
            return base.Channel.GetCommonClassesAsync();
        }
        
        public int GetBranchIDFromZip(string OriginZip) {
            return base.Channel.GetBranchIDFromZip(OriginZip);
        }
        
        public System.Threading.Tasks.Task<int> GetBranchIDFromZipAsync(string OriginZip) {
            return base.Channel.GetBranchIDFromZipAsync(OriginZip);
        }
        
        public void UpdateCustomerCoupon(string CustomerID, int CouponID) {
            base.Channel.UpdateCustomerCoupon(CustomerID, CouponID);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerCouponAsync(string CustomerID, int CouponID) {
            return base.Channel.UpdateCustomerCouponAsync(CustomerID, CouponID);
        }
        
        public System.Data.DataTable GetAggregatorQualifiedLeads() {
            return base.Channel.GetAggregatorQualifiedLeads();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAggregatorQualifiedLeadsAsync() {
            return base.Channel.GetAggregatorQualifiedLeadsAsync();
        }
        
        public System.Data.DataTable GetGraebelQualifiedLeads() {
            return base.Channel.GetGraebelQualifiedLeads();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetGraebelQualifiedLeadsAsync() {
            return base.Channel.GetGraebelQualifiedLeadsAsync();
        }
        
        public System.Data.DataTable GetAPILeadImportInfoBySource(string APIClientSource) {
            return base.Channel.GetAPILeadImportInfoBySource(APIClientSource);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAPILeadImportInfoBySourceAsync(string APIClientSource) {
            return base.Channel.GetAPILeadImportInfoBySourceAsync(APIClientSource);
        }
        
        public string ImportLeadSitecore(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText) {
            return base.Channel.ImportLeadSitecore(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, MoveType, APIReferenceID, DestinationZip, CanWeText);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadSitecoreAsync(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string MoveType, int APIReferenceID, string DestinationZip, bool CanWeText) {
            return base.Channel.ImportLeadSitecoreAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, MoveType, APIReferenceID, DestinationZip, CanWeText);
        }
        
        public void InsertCustomerIPAddress(string CustomerID, string IPAddress) {
            base.Channel.InsertCustomerIPAddress(CustomerID, IPAddress);
        }
        
        public System.Threading.Tasks.Task InsertCustomerIPAddressAsync(string CustomerID, string IPAddress) {
            return base.Channel.InsertCustomerIPAddressAsync(CustomerID, IPAddress);
        }
        
        public string ImportLead03(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress) {
            return base.Channel.ImportLead03(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, ClientIPAddress);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead03Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress) {
            return base.Channel.ImportLead03Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, ClientIPAddress);
        }
        
        public string ImportLead01(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string Comments, string Address) {
            return base.Channel.ImportLead01(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, Comments, Address);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead01Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string Comments, string Address) {
            return base.Channel.ImportLead01Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, Comments, Address);
        }
        
        public string ImportLeadKenshoo(
                    string KPID, 
                    bool CreateLead, 
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    string MoveType, 
                    string GCLID, 
                    string MSCLICKID, 
                    int CouponID, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer) {
            return base.Channel.ImportLeadKenshoo(KPID, CreateLead, FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, MoveType, GCLID, MSCLICKID, CouponID, MovingDateNotSure, ZipCodeNotSure, IsAutodialer);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadKenshooAsync(
                    string KPID, 
                    bool CreateLead, 
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    string MoveType, 
                    string GCLID, 
                    string MSCLICKID, 
                    int CouponID, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer) {
            return base.Channel.ImportLeadKenshooAsync(KPID, CreateLead, FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, MoveType, GCLID, MSCLICKID, CouponID, MovingDateNotSure, ZipCodeNotSure, IsAutodialer);
        }
        
        public string ImportLead05(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType) {
            return base.Channel.ImportLead05(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead05Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType) {
            return base.Channel.ImportLead05Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType);
        }
        
        public string ImportLead05GCLID(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, string GCLID) {
            return base.Channel.ImportLead05GCLID(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, GCLID);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead05GCLIDAsync(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, string GCLID) {
            return base.Channel.ImportLead05GCLIDAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, GCLID);
        }
        
        public string ImportLeadMovingful(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string Referral) {
            return base.Channel.ImportLeadMovingful(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, Referral);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadMovingfulAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string Referral) {
            return base.Channel.ImportLeadMovingfulAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, Referral);
        }
        
        public string ImportLeadPMP02(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure, bool IsAutodialer) {
            return base.Channel.ImportLeadPMP02(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadPMP02Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure, bool IsAutodialer) {
            return base.Channel.ImportLeadPMP02Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer);
        }
        
        public string ImportLeadPMP02GCLID(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string GCLID) {
            return base.Channel.ImportLeadPMP02GCLID(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, GCLID);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadPMP02GCLIDAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    string GCLID) {
            return base.Channel.ImportLeadPMP02GCLIDAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, GCLID);
        }
        
        public string ImportLeadPMPCoupon(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID) {
            return base.Channel.ImportLeadPMPCoupon(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, CouponID);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadPMPCouponAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID) {
            return base.Channel.ImportLeadPMPCouponAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, CouponID);
        }
        
        public string ImportLeadPMPCouponGCLID(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID, 
                    string GCLID) {
            return base.Channel.ImportLeadPMPCouponGCLID(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, CouponID, GCLID);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadPMPCouponGCLIDAsync(
                    string FirstName, 
                    string LastName, 
                    string Telephone, 
                    string Email, 
                    string MoveDate, 
                    string MoveSize, 
                    string OriginZip, 
                    string Src, 
                    string DestinationZip, 
                    int APIReferenceID, 
                    bool CanWeText, 
                    string MoveType, 
                    bool MovingDateNotSure, 
                    bool ZipCodeNotSure, 
                    bool IsAutodialer, 
                    int CouponID, 
                    string GCLID) {
            return base.Channel.ImportLeadPMPCouponGCLIDAsync(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure, IsAutodialer, CouponID, GCLID);
        }
        
        public string ImportLeadPMP01(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure) {
            return base.Channel.ImportLeadPMP01(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadPMP01Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string MoveType, bool MovingDateNotSure, bool ZipCodeNotSure) {
            return base.Channel.ImportLeadPMP01Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, MoveType, MovingDateNotSure, ZipCodeNotSure);
        }
        
        public string ImportLeadPorch(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginAddress, string OriginCity, string OriginZip, string DestinationAddress, string DestinationCity, string DestinationZip, string Src, string HomeBuyerOrRenter) {
            return base.Channel.ImportLeadPorch(FullName, Telephone, Email, MoveDate, MoveSize, OriginAddress, OriginCity, OriginZip, DestinationAddress, DestinationCity, DestinationZip, Src, HomeBuyerOrRenter);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadPorchAsync(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginAddress, string OriginCity, string OriginZip, string DestinationAddress, string DestinationCity, string DestinationZip, string Src, string HomeBuyerOrRenter) {
            return base.Channel.ImportLeadPorchAsync(FullName, Telephone, Email, MoveDate, MoveSize, OriginAddress, OriginCity, OriginZip, DestinationAddress, DestinationCity, DestinationZip, Src, HomeBuyerOrRenter);
        }
        
        public string ImportLeadUnbounce(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src) {
            return base.Channel.ImportLeadUnbounce(FullName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadUnbounceAsync(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src) {
            return base.Channel.ImportLeadUnbounceAsync(FullName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src);
        }
        
        public string ImportLeadUnbounceWithDest(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip) {
            return base.Channel.ImportLeadUnbounceWithDest(FullName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip);
        }
        
        public System.Threading.Tasks.Task<string> ImportLeadUnbounceWithDestAsync(string FullName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip) {
            return base.Channel.ImportLeadUnbounceWithDestAsync(FullName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip);
        }
        
        public string ImportLead06(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress, string MoveType, string PromoCode) {
            return base.Channel.ImportLead06(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, ClientIPAddress, MoveType, PromoCode);
        }
        
        public System.Threading.Tasks.Task<string> ImportLead06Async(string FirstName, string LastName, string Telephone, string Email, string MoveDate, string MoveSize, string OriginZip, string Src, string DestinationZip, int APIReferenceID, bool CanWeText, string ClientIPAddress, string MoveType, string PromoCode) {
            return base.Channel.ImportLead06Async(FirstName, LastName, Telephone, Email, MoveDate, MoveSize, OriginZip, Src, DestinationZip, APIReferenceID, CanWeText, ClientIPAddress, MoveType, PromoCode);
        }
    }
}
